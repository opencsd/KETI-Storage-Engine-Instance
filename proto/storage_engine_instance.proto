syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.snippet_sample";
option java_outer_classname = "snippet_sample_Proto";
option objc_class_prefix = "SSP";

package StorageEngineInstance;

service StorageEngineInterface {
  rpc OffloadingQueryInterface (stream SnippetRequest) returns (QueryStringResult) {}
  rpc PushCSDMetric (CSDMetricList) returns (Response) {}
  rpc keti_send_snippet(TmaxRequest) returns (TmaxResponse) {}
  rpc keti_get_csd_status(Empty) returns (CSDMetricList) {}
}

service MergingModule {
  rpc Aggregation (SnippetRequest) returns (Response) {}
  rpc EndQuery (Request) returns (Response) {}
  rpc GetQueryResult (Request) returns (QueryResult) {}
  rpc GetTmaxQueryResult (TmaxRequest) returns (TmaxResponse) {}

}

service MonitoringModule {
  rpc GetSnippetMetaData (MetaDataRequest) returns (SnippetMetaData) {}
}

service OffloadingModule {
  rpc Scheduling (SnippetRequest) returns (Response) {}
  rpc PushCSDMetric (CSDMetricList) returns (Response) {}
  rpc t_snippet_scheduling (TmaxRequest) returns (TmaxResponse) {}
  rpc t_get_csd_status(Empty) returns (CSDMetricList) {}
}

message SnippetRequest {
  enum SnippetType {
    FULL_SCAN = 0;
    INDEX_SCAN = 1;
    INDEX_TABLE_SCAN = 2;
    AGGREGATION = 3;
    FILTER = 4;
    INNER_JOIN = 5;
    LEFT_OUTER_JOIN = 6;
    RIGHT_OUTER_JOIN = 7;
    CROSS_JOIN = 8;
    UNION = 9;
    IN = 10;
    EXIST = 11;
    DEPENDENCY_INNER_JOIN = 12;
    DEPENDENCY_EXIST = 13;
    DEPENDENCY_IN = 14;
    TMAX_SNIPPET = 15;
  }  
  enum ValueType {
    INT8 = 0;
    INT16 = 1;
    INT32 = 2; //DEFAULT
    INT64 = 3;
    FLOAT32 = 4;
    DOUBLE = 5;
    DECIMAL = 6;
    DATE = 7;
    TIMESTAMP = 8;
    STRING = 9;
    COLUMN = 10;
    OPERATOR = 11; //value string으로 연산자 확인
    BOOLEAN = 12;
  }
  message Filter {
    enum OperType {
      GE = 0;
      LE = 1;
      GT = 2;
      LT = 3;
      EQ = 4;
      NE = 5;
      LIKE = 6;
      NOTLIKE = 7;
      BETWEEN = 8;
      IN = 9;
      NOTIN = 10;
      IS = 11;
      ISNOT = 12;
      AND = 13;
      OR = 14;
    }
    message FilterValue {
      repeated ValueType type = 1;
      repeated string value = 2;
    }
    FilterValue lv = 1;
    OperType operator = 2;
    FilterValue rv = 3;
  }
  message Projection {
    enum SelectType{
      COLUMNNAME = 0; //DEFAULT
      SUM = 1;
      AVG = 2;
      COUNT = 3;
      COUNTSTAR = 4;
      COUNTDISTINCT = 5;
      TOP = 6;
      MIN = 7;
      MAX = 8;
    }
    SelectType select_type = 1;
    repeated string value = 2;
    repeated ValueType value_type = 3;    
  }
  message Order {
    enum OrderDirection {
      ASC = 0; //DEFAULT
      DESC = 1;
    }
    repeated OrderDirection ascending = 1;
    repeated string column_name = 2;
  }
  message Dependency {
    repeated Projection dependency_projection = 1;
    repeated Filter dependency_filter = 2;
  }
  message Limit {
    int32 offset = 1;
    int32 length = 2;
  }
  message Ref {
    string table_name = 1;
    string column_name = 2;
  }
  message QueryInfo {
    repeated string table_name = 1;
    repeated Filter filtering = 2;
    repeated Projection projection = 3;
    repeated Filter having = 4;
    repeated string group_by = 5;
    Order order_by = 6;
    Limit limit = 7;
    Dependency dependency = 8;
    Ref ref = 9;
  }
  message SchemaInfo {
    message Column {
      string name = 1;
      int32 type = 3;
      int32 length = 2;
      bool primary = 4; 
      bool index = 5; 
      bool nullable = 6;
    }
    repeated Column column_list = 1;
    int32 table_index_number = 2;
  }
 
  message SstInfo {
    message CSD {
      message Block {
        repeated int64 offset = 1;
        repeated int32 length = 2;
      }
      string csd_id = 1;
      string partition = 2;
      repeated Block block = 3;
    } 
    string sst_name = 1;
    repeated CSD csd = 2;
    int32 sst_block_count = 3;
  }
  message WalInfo {
    repeated string deleted_key = 1;
    repeated string inserted_key = 2;
    repeated string inserted_value = 3;
  }
  message ResultInfo {
    string table_alias = 1;
    repeated string column_alias = 2;
    int32 total_block_count = 3;
  }
  SnippetType type = 1;
  int32 query_id = 2;
  int32 work_id = 3;
  QueryInfo query_info = 4;
  SchemaInfo schema_info = 5;
  repeated SstInfo sst_info = 6;
  WalInfo wal_info = 7;
  ResultInfo result_info = 8;
}

message Request {
  int32 query_id = 1;
  int32 work_id = 2;
  string db_name = 3;
  string table_name = 4;
}

message Response {
  string value = 1;
}

message QueryResult {
  message Column {
    enum ColType {
      TYPE_EMPTY = 0;
      TYPE_STRING = 1;
      TYPE_INT = 2;
      TYPE_FLOAT = 3;
      TYPE_DATE = 4;
    }
    int32 real_size = 1;
    ColType col_type = 2;
    repeated string string_col = 3;
    repeated int32 int_col = 4;
    repeated double double_col = 5;
  }
  map<string, Column> query_result = 1;
  int32 row_count = 2;
  int32 scanned_row_count = 3;
  int32 filtered_row_count = 4; 
}

message QueryStringResult {
  string query_result = 1;
  int32 scanned_row_count = 2;
  int32 filtered_row_count = 3; 
}

message MetaDataRequest {
  string db_name = 1;
  string table_name = 2;
  //ScanInfo scan_info = 3;
}

message SnippetMetaData {
  message PBAInfo{
    string pba_string = 1;
    int32 block_count = 2;
  }
  map<string,PBAInfo> sst_pba_map = 1;
  int32 table_total_block_count = 2;
  string wal_deleted_key_json = 3;
  repeated string wal_inserted_row_json = 4;
}

message CSDMetricList {
  message CSDMetric{
    string id = 1;
    string ip = 2;
    float cpu_usage = 3;
    float memory_usage = 4;
    float disk_usage = 5;
    float network = 6;
    int32 working_block_count = 7;
    float score = 8;
  }
  repeated CSDMetric csd_metric_list = 1;
}


message TmaxRequest { 
  enum RequestType { 
    FO_REQUEST = 0; 
    FETCH_REQUEST = 1; 
  } 
  message File {
    message Chunk { 
      int64 offset = 1; 
      int32 length = 2; 
    }
    string filename = 1; 
    repeated Chunk chunk_list = 2; 
  }
  RequestType type = 1; 
  int32 id = 2; 
  int32 block_size = 3;
  int32 buffer_size = 4; 
  bytes filter = 5; 
  repeated File file_list = 6;
}
message TmaxResponse {
  enum ResponseType {  
    FO_RESPONSE = 0;  
    FETCH_RESPONSE = 1;  
  }
  enum TmaxErrorCode { 
    TMAX_ERROR_NONE = 0; 
    TMAX_ERROR_INVALID_REQTYPE=1; 
  }  
  ResponseType type = 1;  
  bytes result = 2; 
  int32 chunk_count = 3; 
  TmaxErrorCode  errorcode = 4; 
}

message Empty {}
